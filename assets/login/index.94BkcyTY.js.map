{"version":3,"file":"index.94BkcyTY.js","sources":["../../../src/screens/login/hooks/useLoginManager.ts","../../../src/screens/login/components/AlternativeLogins.tsx","../../../src/screens/login/components/Footer.tsx","../../../src/screens/login/components/Header.tsx","../../../src/screens/login/components/LoginForm.tsx","../../../src/screens/login/index.tsx"],"sourcesContent":["import { useMemo } from \"react\";\n\nimport type { ScreenMembersOnLogin } from \"@auth0/auth0-acul-js\";\nimport LoginInstance from \"@auth0/auth0-acul-js/login\";\n\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\n\nexport const useLoginManager = () => {\n  const loginInstance = useMemo(() => new LoginInstance(), []);\n\n  const { transaction, screen } = loginInstance;\n  const { isSignupEnabled, isForgotPasswordEnabled, passwordPolicy } =\n    transaction;\n\n  const { signupLink, resetPasswordLink, texts, captchaImage } = screen;\n\n  const handleLogin = async (\n    username: string,\n    password: string,\n    captcha?: string\n  ): Promise<void> => {\n    const options: { username: string; password: string; captcha?: string } = {\n      username: username?.trim() || \"\",\n      password: password || \"\",\n    };\n\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\n      options.captcha = captcha.trim();\n    }\n\n    executeSafely(`Login with options: ${JSON.stringify(options)}`, () =>\n      loginInstance.login(options)\n    );\n  };\n\n  const handleFederatedLogin = async (connectionName: string) => {\n    executeSafely(`Federated login with connection: ${connectionName}`, () =>\n      loginInstance.federatedLogin({ connection: connectionName })\n    );\n  };\n\n  return {\n    loginInstance,\n    handleLogin,\n    handleFederatedLogin,\n    texts: (texts || {}) as ScreenMembersOnLogin[\"texts\"],\n    isSignupEnabled: isSignupEnabled === true,\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\n    errors: loginInstance.getError(),\n    captchaImage,\n    signupLink,\n    resetPasswordLink,\n    allowedIdentifiers: transaction.allowedIdentifiers || [],\n    passwordPolicy,\n  };\n};\n","import ULThemeSocialProviderButton from \"@/components/ULThemeSocialProviderButton\";\nimport type { SocialConnection } from \"@/utils/helpers/socialUtils\";\nimport { getSocialProviderDetails } from \"@/utils/helpers/socialUtils\";\n\nimport { useLoginManager } from \"../hooks/useLoginManager\";\n\nexport interface AlternativeLoginsProps {\n  connections?: SocialConnection[] | undefined;\n}\n\nconst AlternativeLogins = ({ connections }: AlternativeLoginsProps) => {\n  const { handleFederatedLogin } = useLoginManager();\n\n  return (\n    <>\n      <div className=\"space-y-3 mt-2\">\n        {connections?.map((connection: SocialConnection) => {\n          const { displayName, iconComponent } =\n            getSocialProviderDetails(connection);\n          const socialButtonText = `Continue with ${displayName}`;\n          return (\n            <ULThemeSocialProviderButton\n              key={connection.name}\n              displayName={displayName}\n              buttonText={socialButtonText}\n              iconComponent={iconComponent}\n              onClick={() => handleFederatedLogin(connection.name)}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default AlternativeLogins;\n","import ULThemeLink from \"@/components/ULThemeLink\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginManager } from \"../hooks/useLoginManager\";\n\nfunction Footer() {\n  const { texts, signupLink, isSignupEnabled } = useLoginManager();\n\n  // Handle text fallbacks in component\n  const footerText =\n    texts?.footerText || texts?.signupActionText || \"Don't have an account?\";\n  const signupLinkText =\n    texts?.footerLinkText || texts?.signupActionLinkText || \"Sign up\";\n\n  const localizedSignupLink =\n    signupLink && rebaseLinkToCurrentOrigin(signupLink);\n\n  return (\n    <div className=\"mt-4 text-left\">\n      {isSignupEnabled && localizedSignupLink && (\n        <div className=\"text-sm\">\n          <span className=\"text-body-text\">{footerText} </span>\n          <ULThemeLink href={localizedSignupLink}>{signupLinkText}</ULThemeLink>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Footer;\n","import ULThemeLogo from \"@/components/ULThemeLogo\";\nimport ULThemeSubtitle from \"@/components/ULThemeSubtitle\";\nimport ULThemeTitle from \"@/components/ULThemeTitle\";\n\nimport { useLoginManager } from \"../hooks/useLoginManager\";\n\nfunction Header() {\n  const { texts } = useLoginManager();\n\n  // Handle text fallbacks in component\n  const logoAltText = texts?.logoAltText || \"Application Logo\";\n\n  return (\n    <>\n      <ULThemeLogo altText={logoAltText}></ULThemeLogo>\n      <ULThemeTitle>{texts?.title || \"Welcome\"}</ULThemeTitle>\n      <ULThemeSubtitle>\n        {texts?.description ||\n          \"Log in to dev-tenant to continue to my acul react.\"}\n      </ULThemeSubtitle>\n    </>\n  );\n}\n\nexport default Header;\n","import { useForm } from \"react-hook-form\";\n\nimport type { Error } from \"@auth0/auth0-acul-js\";\n\nimport Captcha from \"@/components/Captcha\";\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\nimport ULThemeLink from \"@/components/ULThemeLink\";\nimport { ULThemePasswordField } from \"@/components/ULThemePasswordField\";\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginManager } from \"../hooks/useLoginManager\";\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n  captcha?: string;\n}\n\nfunction LoginForm() {\n  const {\n    handleLogin,\n    errors,\n    isCaptchaAvailable,\n    captchaImage,\n    resetPasswordLink,\n    isForgotPasswordEnabled,\n    texts,\n    allowedIdentifiers,\n    passwordPolicy,\n  } = useLoginManager();\n\n  const form = useForm<LoginFormData>({\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n      captcha: \"\",\n    },\n  });\n\n  const {\n    formState: { isSubmitting },\n  } = form;\n\n  // Handle text fallbacks in component\n  const buttonText = texts?.buttonText || \"Continue\";\n  const captchaLabel = texts?.captchaCodePlaceholder?.concat(\"*\") || \"CAPTCHA*\";\n  const captchaImageAlt = \"CAPTCHA challenge\"; // Default fallback\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\n\n  // Use getIdentifierDetails pattern for username label\n  const {\n    label: usernameLabel,\n    type: usernameType,\n    autoComplete: usernameAutoComplete,\n  } = getIdentifierDetails(allowedIdentifiers, texts);\n\n  const passwordLabel = texts?.passwordPlaceholder?.concat(\"*\") || \"Password*\";\n\n  // Password visibility toggle\n  const generalErrors =\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\n    [];\n\n  const usernameSDKError =\n    getFieldError(\"username\", errors) || getFieldError(\"email\", errors);\n\n  const passwordSDKError = getFieldError(\"password\", errors);\n  const captchaSDKError = getFieldError(\"captcha\", errors);\n\n  // Proper submit handler with form data\n  const onSubmit = async (data: LoginFormData) => {\n    await handleLogin(data.username, data.password, data.captcha);\n  };\n\n  const localizedResetPasswordLink =\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\n        {/* General alerts at the top */}\n        {generalErrors.length > 0 && (\n          <div className=\"space-y-3 mb-4\">\n            {generalErrors.map((error: Error, index: number) => (\n              <ULThemeAlert key={index} variant=\"destructive\">\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\n              </ULThemeAlert>\n            ))}\n          </div>\n        )}\n\n        {/* Username/Email input field */}\n        <FormField\n          control={form.control}\n          name=\"username\"\n          rules={{\n            required: \"This field is required\",\n            maxLength: {\n              value: 100,\n              message: \"Maximum 100 characters allowed\",\n            },\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <ULThemeFloatingLabelField\n                {...field}\n                label={usernameLabel}\n                type={usernameType}\n                autoFocus={true}\n                autoComplete={usernameAutoComplete}\n                error={!!fieldState.error || !!usernameSDKError}\n              />\n              <ULThemeFormMessage\n                sdkError={usernameSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* Password input field */}\n        <FormField\n          control={form.control}\n          name=\"password\"\n          rules={{\n            required: \"Password is required\",\n            maxLength: {\n              value: 200,\n              message: \"Maximum 200 characters allowed\",\n            },\n            minLength: passwordPolicy?.minLength\n              ? {\n                  value: passwordPolicy.minLength,\n                  message: `Password must be at least ${passwordPolicy.minLength} characters`,\n                }\n              : undefined,\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <ULThemePasswordField\n                {...field}\n                label={passwordLabel}\n                autoComplete=\"current-password\"\n                error={!!fieldState.error || !!passwordSDKError}\n              />\n              <ULThemeFormMessage\n                sdkError={passwordSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* CAPTCHA Box */}\n        {isCaptchaAvailable && (\n          <Captcha\n            control={form.control}\n            name=\"captcha\"\n            label={captchaLabel}\n            imageUrl={captchaImage || \"\"}\n            imageAltText={captchaImageAlt}\n            sdkError={captchaSDKError}\n            rules={{\n              required: \"Please complete the CAPTCHA\",\n              maxLength: {\n                value: 15,\n                message: \"CAPTCHA too long\",\n              },\n            }}\n          />\n        )}\n\n        {/* Forgot Password link */}\n        <div className=\"text-left\">\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\n            <ULThemeLink href={localizedResetPasswordLink}>\n              {forgotPasswordText}\n            </ULThemeLink>\n          )}\n        </div>\n\n        {/* Submit button */}\n        <ULThemePrimaryButton\n          type=\"submit\"\n          className=\"w-full\"\n          disabled={isSubmitting}\n        >\n          {buttonText}\n        </ULThemePrimaryButton>\n      </form>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import ULThemeCard from \"@/components/ULThemeCard\";\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\nimport ULThemeSeparator from \"@/components/ULThemeSeparator\";\nimport { SocialConnection } from \"@/utils/helpers/socialUtils\";\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\nimport { applyAuth0Theme } from \"@/utils/theme/themeEngine\";\n\nimport AlternativeLogins from \"./components/AlternativeLogins\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/LoginForm\";\nimport { useLoginManager } from \"./hooks/useLoginManager\";\n\nfunction LoginScreen() {\n  // Extracting attributes from hook made out of LoginInstance class of Auth0 JS SDK\n  const { loginInstance, texts } = useLoginManager();\n\n  // Fetching List of Social Connections\n  const socialConnectionsList = loginInstance?.transaction\n    ?.alternateConnections as SocialConnection[] | undefined;\n\n  // Check whether separator component needs to be rendered based on social connections\n  const showSeparator =\n    socialConnectionsList && socialConnectionsList.length > 0;\n\n  // Other Texts\n  const separatorText = texts?.separatorText || \"OR\";\n  document.title = texts?.pageTitle || \"Login\";\n\n  // Apply theme from SDK instance when screen loads\n  applyAuth0Theme(loginInstance);\n\n  // Extracting Tenant setting for social login component alignment on the layout via theme token\n  const socialLoginAlignment = extractTokenValue(\n    \"--ul-theme-widget-social-buttons-layout\"\n  );\n\n  const renderSocialLogins = (alignment: \"top\" | \"bottom\") => (\n    <>\n      {alignment === \"bottom\" && showSeparator && (\n        <ULThemeSeparator text={separatorText} />\n      )}\n      <AlternativeLogins connections={socialConnectionsList} />\n      {alignment === \"top\" && showSeparator && (\n        <ULThemeSeparator text={separatorText} />\n      )}\n    </>\n  );\n\n  return (\n    // Applying UDS theme overrides using the \"theme-universal\" class\n    <ULThemePageLayout className=\"theme-universal\">\n      <ULThemeCard className=\"w-full max-w-[400px] gap-0\">\n        <Header />\n        {socialLoginAlignment === \"top\" && renderSocialLogins(\"top\")}\n        <LoginForm />\n        <Footer />\n        {socialLoginAlignment === \"bottom\" && renderSocialLogins(\"bottom\")}\n      </ULThemeCard>\n    </ULThemePageLayout>\n  );\n}\n\nexport default LoginScreen;\n"],"names":["useLoginManager","loginInstance","useMemo","LoginInstance","transaction","screen","isSignupEnabled","isForgotPasswordEnabled","passwordPolicy","signupLink","resetPasswordLink","texts","captchaImage","username","password","captcha","options","executeSafely","connectionName","AlternativeLogins","connections","handleFederatedLogin","jsx","Fragment","connection","displayName","iconComponent","getSocialProviderDetails","socialButtonText","ULThemeSocialProviderButton","Footer","footerText","signupLinkText","localizedSignupLink","rebaseLinkToCurrentOrigin","jsxs","ULThemeLink","Header","logoAltText","ULThemeLogo","ULThemeTitle","ULThemeSubtitle","LoginForm","handleLogin","errors","isCaptchaAvailable","allowedIdentifiers","form","useForm","isSubmitting","buttonText","captchaLabel","captchaImageAlt","forgotPasswordText","usernameLabel","usernameType","usernameAutoComplete","getIdentifierDetails","passwordLabel","generalErrors","error","usernameSDKError","getFieldError","passwordSDKError","captchaSDKError","onSubmit","data","localizedResetPasswordLink","Form","index","ULThemeAlert","ULThemeAlertTitle","FormField","field","fieldState","FormItem","ULThemeFloatingLabelField","ULThemeFormMessage","ULThemePasswordField","Captcha","ULThemePrimaryButton","LoginScreen","socialConnectionsList","showSeparator","separatorText","applyAuth0Theme","socialLoginAlignment","extractTokenValue","renderSocialLogins","alignment","ULThemeSeparator","ULThemePageLayout","ULThemeCard"],"mappings":"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"}